import discord
from discord import app_commands
from discord.ext import commands, tasks
import aiosqlite
from datetime import datetime, timedelta
import asyncio
import random
from typing import Optional, Dict, List, Tuple

class EconomicInfluence(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.cooldowns = {}  # {user_id: cooldown_end_time}
        self.active_events = {}  # {guild_id: {event_type: event_data}}
        self.initialize_database()
        self.cleanup_expired_events.start()

    def initialize_database(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        # –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω–∞ –Ω–∞ async –≤–µ—Ä—Å–∏—é –≤ setup_hook
        pass
    
    @tasks.loop(minutes=5)
    async def cleanup_expired_events(self):
        """–û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–µ–∫—à–∏—Ö —Å–æ–±—ã—Ç–∏–π"""
        try:
            async with aiosqlite.connect(self.bot.db_path) as conn:
                now = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ is_active
                cursor = await conn.execute("PRAGMA table_info(economic_events)")
                columns = [column[1] for column in await cursor.fetchall()]
                await cursor.close()
                
                # –£–¥–∞–ª—è–µ–º –∏—Å—Ç–µ–∫—à–∏–µ —Å–æ–±—ã—Ç–∏—è –∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
                if 'is_active' in columns:
                    await conn.execute(
                        "UPDATE economic_events SET is_active = 0 WHERE expires_at < ? AND is_active = 1",
                        (now,)
                    )
                else:
                    # –ï—Å–ª–∏ –∫–æ–ª–æ–Ω–∫–∏ is_active –Ω–µ—Ç, –ø—Ä–æ—Å—Ç–æ —É–¥–∞–ª—è–µ–º –∏—Å—Ç–µ–∫—à–∏–µ –∑–∞–ø–∏—Å–∏
                    await conn.execute(
                        "DELETE FROM economic_events WHERE expires_at < ?",
                        (now,)
                    )
                
                # –£–¥–∞–ª—è–µ–º –∏—Å—Ç–µ–∫—à–∏–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
                await conn.execute(
                    "DELETE FROM economic_modifiers WHERE expires_at < ?",
                    (now,)
                )
                await conn.commit()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∏—Å—Ç–µ–∫—à–∏—Ö —Å–æ–±—ã—Ç–∏–π: {e}")
    
    def cog_unload(self):
        """–û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ –∫–æ–≥–∞"""
        self.cleanup_expired_events.cancel()
    
    @app_commands.command(name="–≤–ª–∏—è–Ω–∏–µ", description="–ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –≤–ª–∏—è–Ω–∏—è –Ω–∞ —ç–∫–æ–Ω–æ–º–∏–∫—É")
    async def influence(self, interaction: discord.Interaction):
        """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –≤–ª–∏—è–Ω–∏—è –Ω–∞ —ç–∫–æ–Ω–æ–º–∏–∫—É"""
        embed = discord.Embed(
            title="üíº –í–ª–∏—è–Ω–∏–µ –Ω–∞ —ç–∫–æ–Ω–æ–º–∏–∫—É",
            description="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∏–∂–µ, —á—Ç–æ–±—ã –≤–ª–∏—è—Ç—å –Ω–∞ —ç–∫–æ–Ω–æ–º–∏–∫—É —Å–µ—Ä–≤–µ—Ä–∞:",
            color=0x3498db
        )
        
        commands_list = [
            ("/—Ä–∞—Å–ø—Ä–æ–¥–∞–∂–∞", "–ü—Ä–æ–≤–µ—Å—Ç–∏ –º–∞—Å—Å–æ–≤—É—é —Ä–∞—Å–ø—Ä–æ–¥–∞–∂—É —Ç–æ–≤–∞—Ä–æ–≤"),
            ("/—Ñ–æ–Ω–¥_–ø–æ–º–æ—â–∏", "–°–æ–∑–¥–∞—Ç—å —Ñ–æ–Ω–¥ –≤–∑–∞–∏–º–æ–ø–æ–º–æ—â–∏"),
            ("/—Ç–µ–Ω–µ–≤–æ–π_—Ä—ã–Ω–æ–∫", "–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ —Ç–µ–Ω–µ–≤—É—é —ç–∫–æ–Ω–æ–º–∏–∫—É"),
            ("/–Ω–∞–ª–æ–≥–æ–≤–∞—è_—Ä–µ—Ñ–æ—Ä–º–∞", "–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–∞–ª–æ–≥–æ–≤—É—é —Ä–µ—Ñ–æ—Ä–º—É"),
            ("/—Ä–∞–±–æ—á–∞—è_–±—Ä–∏–≥–∞–¥–∞", "–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —Ä–∞–±–æ—á—É—é –±—Ä–∏–≥–∞–¥—É"),
            ("/–∫—Ä–µ–¥–∏—Ç–Ω—ã–π_—Ä—ã–Ω–æ–∫", "–í–æ–π—Ç–∏ –≤ –∫—Ä–µ–¥–∏—Ç–Ω—ã–π —Ä—ã–Ω–æ–∫"),
            ("/–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è_–∫–∞–º–ø–∞–Ω–∏—è", "–ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ñ–æ-–∫–∞–º–ø–∞–Ω–∏—é"),
            ("/–¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ_–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏", "–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã")
        ]
        
        for cmd, desc in commands_list:
            embed.add_field(name=cmd, value=desc, inline=False)
        
        # –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
        active_modifiers = self.get_active_modifiers(interaction.guild.id)
        if active_modifiers:
            mods_text = "\n".join(
                f"‚Ä¢ {m['description']} ({m['value']:+}%)" 
                f"{f' (–∏—Å—Ç–µ–∫–∞–µ—Ç: {m["expires_at"].strftime("%d.%m %H:%M")})' if m['expires_at'] else ''}"
                for m in active_modifiers
            )
            embed.add_field(
                name="üìä –ê–∫—Ç–∏–≤–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã",
                value=mods_text,
                inline=False
            )
        
        await interaction.response.send_message(embed=embed)
    
    async def get_active_modifiers(self, guild_id: int) -> List[Dict]:
        """–ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã —ç–∫–æ–Ω–æ–º–∏–∫–∏"""
        async with aiosqlite.connect(self.bot.db_path) as conn:
            cursor = await conn.execute(
                """
                SELECT modifier_type, value, description, expires_at 
                FROM economic_modifiers 
                WHERE guild_id = ? AND (expires_at IS NULL OR expires_at > CURRENT_TIMESTAMP)
                """,
                (guild_id,)
            )
            
            results = await cursor.fetchall()
            await cursor.close()
            
            modifiers = []
            for row in results:
                modifiers.append({
                    'type': row[0],
                    'value': row[1],
                    'description': row[2],
                    'expires_at': row[3]
                })
            
            return modifiers
    
    async def add_economic_modifier(
        self, 
        guild_id: int, 
        modifier_type: str, 
        value: float, 
        description: str, 
        duration_hours: Optional[int] = None
    ) -> bool:
        """–î–æ–±–∞–≤–∏—Ç—å –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä —ç–∫–æ–Ω–æ–º–∏–∫–∏"""
        try:
            expires_at = None
            if duration_hours:
                expires_at = (datetime.now() + timedelta(hours=duration_hours)).strftime('%Y-%m-%d %H:%M:%S')
            
            async with aiosqlite.connect(self.bot.db_path) as conn:
                # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–∞–∫–æ–≥–æ –∂–µ —Ç–∏–ø–∞
                await conn.execute(
                    "DELETE FROM economic_modifiers WHERE guild_id = ? AND modifier_type = ?",
                    (guild_id, modifier_type)
                )
                
                # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä
                await conn.execute(
                    """
                    INSERT INTO economic_modifiers 
                    (guild_id, modifier_type, value, description, expires_at)
                    VALUES (?, ?, ?, ?, ?)
                    """,
                    (guild_id, modifier_type, value, description, expires_at)
                )
                
                await conn.commit()
                return True
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞: {e}")
            return False

    async def log_economic_event(
        self, 
        guild_id: int, 
        user_id: int, 
        event_type: str, 
        effect: int, 
        description: str, 
        duration_hours: Optional[int] = None
    ) -> bool:
        """–ó–∞–ø–∏—Å–∞—Ç—å —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–µ —Å–æ–±—ã—Ç–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é"""
        try:
            expires_at = None
            if duration_hours:
                expires_at = (datetime.now() + timedelta(hours=duration_hours)).strftime('%Y-%m-%d %H:%M:%S')
            
            async with aiosqlite.connect(self.bot.db_path) as conn:
                await conn.execute(
                    """
                    INSERT INTO economic_events 
                    (guild_id, user_id, event_type, effect, description, expires_at)
                    VALUES (?, ?, ?, ?, ?, ?)
                    """,
                    (guild_id, user_id, event_type, effect, description, expires_at)
                )
                await conn.commit()
                return True
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ —Å–æ–±—ã—Ç–∏—è: {e}")
            return False
    
    def check_cooldown(self, user_id: int, command_name: str, cooldown_hours: int) -> Tuple[bool, Optional[timedelta]]:
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–¥ –Ω–∞ –∫–æ–º–∞–Ω–¥—É"""
        now = datetime.now()
        key = f"{user_id}_{command_name}"
        
        if key in self.cooldowns and now < self.cooldowns[key]:
            return False, self.cooldowns[key] - now
        
        self.cooldowns[key] = now + timedelta(hours=cooldown_hours)
        return True, None
    
    # ===== –ö–û–ú–ê–ù–î–´ –í–õ–ò–Ø–ù–ò–Ø =====
    
    @app_commands.command(name="—Ä–∞—Å–ø—Ä–æ–¥–∞–∂–∞", description="–ü—Ä–æ–≤–µ—Å—Ç–∏ –º–∞—Å—Å–æ–≤—É—é —Ä–∞—Å–ø—Ä–æ–¥–∞–∂—É —Ç–æ–≤–∞—Ä–æ–≤")
    async def mass_sale(self, interaction: discord.Interaction):
        """–ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å–ø—Ä–æ–¥–∞–∂–∞ —Ç–æ–≤–∞—Ä–æ–≤"""
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–¥ (—Ä–∞–∑ –≤ 24 —á–∞—Å–∞)
        can_use, time_left = self.check_cooldown(interaction.user.id, "mass_sale", 24)
        if not can_use:
            hours = time_left.seconds // 3600
            minutes = (time_left.seconds % 3600) // 60
            await interaction.response.send_message(
                f"‚ùå –í—ã —É–∂–µ –ø—Ä–æ–≤–æ–¥–∏–ª–∏ —Ä–∞—Å–ø—Ä–æ–¥–∞–∂—É –Ω–µ–¥–∞–≤–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ {hours}—á {minutes}–º.",
                ephemeral=True
            )
            return
        
        # –†–∞—Å—á–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∞
        effect = random.randint(50, 150)  # –°–ª—É—á–∞–π–Ω—ã–π –±–æ–Ω—É—Å –∫ –¥–æ—Ö–æ–¥—É
        duration = random.randint(2, 6)   # –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∞ –≤ —á–∞—Å–∞—Ö
        
        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞
        await self.add_economic_modifier(
            interaction.guild.id,
            "income_boost",
            effect,
            f"–ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å–ø—Ä–æ–¥–∞–∂–∞ (–æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä: {interaction.user.display_name})",
            duration
        )
        
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
        await self.log_economic_event(
            interaction.guild.id,
            interaction.user.id,
            "mass_sale",
            effect,
            f"–ü—Ä–æ–≤–µ–¥–µ–Ω–∞ –º–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å–ø—Ä–æ–¥–∞–∂–∞ (+{effect}% –∫ –¥–æ—Ö–æ–¥–∞–º –Ω–∞ {duration}—á)",
            duration
        )
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        embed = discord.Embed(
            title="üè∑Ô∏è –ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å–ø—Ä–æ–¥–∞–∂–∞!",
            description=f"{interaction.user.mention} –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–ª(–∞) –º–∞—Å—Å–æ–≤—É—é —Ä–∞—Å–ø—Ä–æ–¥–∞–∂—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!",
            color=0x2ecc71
        )
        
        embed.add_field(
            name="–≠—Ñ—Ñ–µ–∫—Ç",
            value=f"+{effect}% –∫ –¥–æ—Ö–æ–¥–∞–º –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ {duration} —á–∞—Å–æ–≤",
            inline=False
        )
        
        embed.add_field(
            name="–ü–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è",
            value="‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ä–æ—Å—Ç —ç–∫–æ–Ω–æ–º–∏–∫–∏\n‚Ä¢ –°–Ω–∏–∂–µ–Ω–∏–µ —Ü–µ–Ω –Ω–∞ —Ç–æ–≤–∞—Ä—ã\n‚Ä¢ –ü–æ–≤—ã—à–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–∞ —Ä—ã–Ω–∫–µ",
            inline=False
        )
        
        embed.set_footer(text=f"–°–ª–µ–¥—É—é—â–∞—è —Ä–∞—Å–ø—Ä–æ–¥–∞–∂–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞")
        
        await interaction.response.send_message(embed=embed)
    
    @app_commands.command(name="—Ñ–æ–Ω–¥_–ø–æ–º–æ—â–∏", description="–°–æ–∑–¥–∞—Ç—å —Ñ–æ–Ω–¥ –≤–∑–∞–∏–º–æ–ø–æ–º–æ—â–∏")
    @app_commands.describe(–≤–∑–Ω–æ—Å="–°—É–º–º–∞ –≤–∑–Ω–æ—Å–∞ –≤ —Ñ–æ–Ω–¥ (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π)")
    async def help_fund(self, interaction: discord.Interaction, –≤–∑–Ω–æ—Å: int):
        """–°–æ–∑–¥–∞—Ç—å —Ñ–æ–Ω–¥ –≤–∑–∞–∏–º–æ–ø–æ–º–æ—â–∏"""
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞
        if –≤–∑–Ω–æ—Å <= 0:
            await interaction.response.send_message(
                "‚ùå –°—É–º–º–∞ –≤–∑–Ω–æ—Å–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π.",
                ephemeral=True
            )
            return
            
        balance = await self.bot.get_user_balance(interaction.guild, interaction.user)
        if balance < –≤–∑–Ω–æ—Å:
            await interaction.response.send_message(
                f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–æ–Ω–¥–∞. –í–∞—à –±–∞–ª–∞–Ω—Å: {balance:,} –º–æ–Ω–µ—Ç.",
                ephemeral=True
            )
            return
        
        # –°–ø–∏—Å–∞–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤
        success, new_balance = await self.bot.spend_user_money(
            interaction.guild, interaction.user, –≤–∑–Ω–æ—Å, "–í–∑–Ω–æ—Å –≤ —Ñ–æ–Ω–¥ –≤–∑–∞–∏–º–æ–ø–æ–º–æ—â–∏"
        )
        
        if not success:
            await interaction.response.send_message("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–ø–∏—Å–∞–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤.", ephemeral=True)
            return
        
        # –†–∞—Å—á–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∞ (—á–µ–º –±–æ–ª—å—à–µ –≤–∑–Ω–æ—Å, —Ç–µ–º —Å–∏–ª—å–Ω–µ–µ —ç—Ñ—Ñ–µ–∫—Ç)
        effect = min(–≤–∑–Ω–æ—Å // 10, 50)  # –ú–∞–∫—Å–∏–º—É–º +50% –∫ –¥–æ—Ö–æ–¥–∞–º
        duration = min(–≤–∑–Ω–æ—Å // 1000, 24)  # –ú–∞–∫—Å–∏–º—É–º 24 —á–∞—Å–∞
        
        if duration < 1:  # –ú–∏–Ω–∏–º—É–º 1 —á–∞—Å
            duration = 1
        
        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞
        await self.add_economic_modifier(
            interaction.guild.id,
            "help_fund_boost",
            effect,
            f"–§–æ–Ω–¥ –≤–∑–∞–∏–º–æ–ø–æ–º–æ—â–∏ (–æ—Ç {interaction.user.display_name}): +{effect}% –∫ –¥–æ—Ö–æ–¥–∞–º",
            duration
        )
        
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
        await self.log_economic_event(
            interaction.guild.id,
            interaction.user.id,
            "help_fund",
            effect,
            f"–°–æ–∑–¥–∞–Ω —Ñ–æ–Ω–¥ –≤–∑–∞–∏–º–æ–ø–æ–º–æ—â–∏ –Ω–∞ —Å—É–º–º—É {–≤–∑–Ω–æ—Å:,} –º–æ–Ω–µ—Ç (+{effect}% –∫ –¥–æ—Ö–æ–¥–∞–º –Ω–∞ {duration}—á)",
            duration
        )
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        embed = discord.Embed(
            title="ü§ù –§–æ–Ω–¥ –≤–∑–∞–∏–º–æ–ø–æ–º–æ—â–∏",
            description=f"{interaction.user.mention} —Å–æ–∑–¥–∞–ª(–∞) —Ñ–æ–Ω–¥ –≤–∑–∞–∏–º–æ–ø–æ–º–æ—â–∏ –Ω–∞ —Å—É–º–º—É **{–≤–∑–Ω–æ—Å:,}** –º–æ–Ω–µ—Ç!",
            color=0x2ecc71
        )
        
        embed.add_field(
            name="–≠—Ñ—Ñ–µ–∫—Ç",
            value=f"+{effect}% –∫ –¥–æ—Ö–æ–¥–∞–º –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ {duration} —á–∞—Å–æ–≤",
            inline=False
        )
        
        embed.add_field(
            name="–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç",
            value=(
                "‚Ä¢ –í–∞—à –≤–∑–Ω–æ—Å —Å—Ç–∏–º—É–ª–∏—Ä—É–µ—Ç —ç–∫–æ–Ω–æ–º–∏–∫—É —Å–µ—Ä–≤–µ—Ä–∞\n"
                "‚Ä¢ –í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –ø–æ–ª—É—á–∞—é—Ç –±–æ–Ω—É—Å –∫ –¥–æ—Ö–æ–¥–∞–º\n"
                "‚Ä¢ –ß–µ–º –±–æ–ª—å—à–µ —Å—É–º–º–∞ –≤–∑–Ω–æ—Å–∞, —Ç–µ–º —Å–∏–ª—å–Ω–µ–µ –∏ –¥–æ–ª—å—à–µ —ç—Ñ—Ñ–µ–∫—Ç"
            ),
            inline=False
        )
        
        embed.set_footer(text=f"–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {new_balance:,} –º–æ–Ω–µ—Ç")
        
        await interaction.response.send_message(embed=embed)
    
    @app_commands.command(name="—Ç–µ–Ω–µ–≤–æ–π_—Ä—ã–Ω–æ–∫", description="–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ —Ç–µ–Ω–µ–≤—É—é —ç–∫–æ–Ω–æ–º–∏–∫—É")
    @app_commands.describe(—Å—É–º–º–∞="–°—É–º–º–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π)")
    async def black_market(self, interaction: discord.Interaction, —Å—É–º–º–∞: int):
        """–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ —Ç–µ–Ω–µ–≤—É—é —ç–∫–æ–Ω–æ–º–∏–∫—É"""
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É–º–º—ã
        if —Å—É–º–º–∞ <= 0:
            await interaction.response.send_message(
                "‚ùå –°—É–º–º–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π.",
                ephemeral=True
            )
            return
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞
        balance = await self.bot.get_user_balance(interaction.guild, interaction.user)
        if balance < —Å—É–º–º–∞:
            await interaction.response.send_message(
                f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π. –í–∞—à –±–∞–ª–∞–Ω—Å: {balance:,} –º–æ–Ω–µ—Ç.",
                ephemeral=True
            )
            return
        
        # –®–∞–Ω—Å —É—Å–ø–µ—Ö–∞ (70%)
        success = random.random() < 0.7
        
        if success:
            # –£—Å–ø–µ—à–Ω–∞—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è (–ø—Ä–∏–±—ã–ª—å 20-100%)
            multiplier = 1 + random.uniform(0.2, 1.0)
            profit = int(—Å—É–º–º–∞ * (multiplier - 1))
            
            # –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –ø—Ä–∏–±—ã–ª–∏
            new_balance = await self.bot.add_user_money(
                interaction.guild, interaction.user, profit, "black_market_profit"
            )
            
            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
            await self.log_economic_event(
                interaction.guild.id,
                interaction.user.id,
                "black_market_success",
                profit,
                f"–£—Å–ø–µ—à–Ω–∞—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è –≤ —Ç–µ–Ω–µ–≤–æ–π —Ä—ã–Ω–æ–∫: +{profit:,} –º–æ–Ω–µ—Ç"
            )
            
            # –°–ª—É—á–∞–π–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç –Ω–∞ —ç–∫–æ–Ω–æ–º–∏–∫—É (30% —à–∞–Ω—Å)
            if random.random() < 0.3:
                effect = random.randint(-20, 20)  # –°–ª—É—á–∞–π–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç –æ—Ç -20% –¥–æ +20%
                duration = random.randint(1, 6)   # 1-6 —á–∞—Å–æ–≤
                
                await self.add_economic_modifier(
                    interaction.guild.id,
                    "black_market_effect",
                    effect,
                    f"–¢–µ–Ω–µ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: {effect:+}% –∫ —ç–∫–æ–Ω–æ–º–∏–∫–µ",
                    duration
                )
                
                effect_text = f"\n\nüìä –≠—Ñ—Ñ–µ–∫—Ç –Ω–∞ —ç–∫–æ–Ω–æ–º–∏–∫—É: {effect:+}% –Ω–∞ {duration}—á"
            else:
                effect_text = ""
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            embed = discord.Embed(
                title="üí∞ –£—Å–ø–µ—à–Ω–∞—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è!",
                description=(
                    f"{interaction.user.mention} —É—Å–ø–µ—à–Ω–æ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–ª(–∞) **{—Å—É–º–º–∞:,}** –º–æ–Ω–µ—Ç –≤ —Ç–µ–Ω–µ–≤–æ–π —Ä—ã–Ω–æ–∫ "
                    f"–∏ –ø–æ–ª—É—á–∏–ª(–∞) –ø—Ä–∏–±—ã–ª—å **+{profit:,}** –º–æ–Ω–µ—Ç!"
                    f"{effect_text}"
                ),
                color=0x2ecc71
            )
            
            embed.set_footer(text=f"–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {new_balance:,} –º–æ–Ω–µ—Ç")
            
        else:
            # –ù–µ—É–¥–∞—á–Ω–∞—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è (–ø–æ—Ç–µ—Ä—è 50-100%)
            loss = int(—Å—É–º–º–∞ * random.uniform(0.5, 1.0))
            
            # –°–ø–∏—Å–∞–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤
            success, new_balance = await self.bot.spend_user_money(
                interaction.guild, interaction.user, loss, "black_market_loss"
            )
            
            if not success:
                await interaction.response.send_message("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–ø–∏—Å–∞–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤.", ephemeral=True)
                return
            
            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
            await self.log_economic_event(
                interaction.guild.id,
                interaction.user.id,
                "black_market_fail",
                -loss,
                f"–ù–µ—É–¥–∞—á–Ω–∞—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è –≤ —Ç–µ–Ω–µ–≤–æ–π —Ä—ã–Ω–æ–∫: -{loss:,} –º–æ–Ω–µ—Ç"
            )
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            embed = discord.Embed(
                title="üí∏ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å!",
                description=(
                    f"{interaction.user.mention} –ø–æ—Ç–µ—Ä—è–ª(–∞) **{loss:,}** –º–æ–Ω–µ—Ç "
                    f"–∏–∑-–∑–∞ –Ω–µ—É–¥–∞—á–Ω–æ–π –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ —Ç–µ–Ω–µ–≤–æ–π —Ä—ã–Ω–æ–∫."
                ),
                color=0xe74c3c
            )
    @app_commands.command(name="–Ω–∞–ª–æ–≥–æ–≤–∞—è_—Ä–µ—Ñ–æ—Ä–º–∞", description="–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–∞–ª–æ–≥–æ–≤—É—é —Ä–µ—Ñ–æ—Ä–º—É")
    async def tax_reform(self, interaction: discord.Interaction):
        """–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–∞–ª–æ–≥–æ–≤—É—é —Ä–µ—Ñ–æ—Ä–º—É"""
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–¥ (—Ä–∞–∑ –≤ 48 —á–∞—Å–æ–≤)
        can_use, time_left = self.check_cooldown(interaction.user.id, "tax_reform", 48)
        if not can_use:
            hours = time_left.seconds // 3600 + time_left.days * 24
            minutes = (time_left.seconds % 3600) // 60
            await interaction.response.send_message(
                f"‚ùå –í—ã —É–∂–µ –ø—Ä–µ–¥–ª–∞–≥–∞–ª–∏ —Ä–µ—Ñ–æ—Ä–º—É –Ω–µ–¥–∞–≤–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ {hours}—á {minutes}–º.",
                ephemeral=True
            )
            return
        
        # –°–ª—É—á–∞–π–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç —Ä–µ—Ñ–æ—Ä–º—ã (–æ—Ç -10% –¥–æ +10% –∫ –Ω–∞–ª–æ–≥–∞–º)
        tax_change = random.randint(-10, 10)
        duration = random.randint(6, 24)  # 6-24 —á–∞—Å–∞
        
        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞
        await self.add_economic_modifier(
            interaction.guild.id,
            "tax_rate",
            tax_change,
            f"–ù–∞–ª–æ–≥–æ–≤–∞—è —Ä–µ—Ñ–æ—Ä–º–∞: {tax_change:+}% –∫ –Ω–∞–ª–æ–≥–∞–º",
            duration
        )
        
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
        await self.log_economic_event(
            interaction.guild.id,
            interaction.user.id,
            "tax_reform",
            tax_change,
            f"–ü—Ä–æ–≤–µ–¥–µ–Ω–∞ –Ω–∞–ª–æ–≥–æ–≤–∞—è —Ä–µ—Ñ–æ—Ä–º–∞: {tax_change:+}% –∫ –Ω–∞–ª–æ–≥–∞–º –Ω–∞ {duration}—á",
            duration
        )
        
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ —Ä–µ—Ñ–æ—Ä–º—ã
        if tax_change > 0:
            reform_type = "–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –Ω–∞–ª–æ–≥–æ–≤"
            color = 0xe74c3c
            effects = [
                "‚Ä¢ –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –¥–æ—Ö–æ–¥–æ–≤ –∫–∞–∑–Ω—ã",
                "‚Ä¢ –°–Ω–∏–∂–µ–Ω–∏–µ –ª–∏—á–Ω—ã—Ö –¥–æ—Ö–æ–¥–æ–≤ –∏–≥—Ä–æ–∫–æ–≤",
                "‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ–µ –∑–∞–º–µ–¥–ª–µ–Ω–∏–µ —ç–∫–æ–Ω–æ–º–∏–∫–∏"
            ]
        elif tax_change < 0:
            reform_type = "–°–Ω–∏–∂–µ–Ω–∏–µ –Ω–∞–ª–æ–≥–æ–≤"
            color = 0x2ecc71
            effects = [
                "‚Ä¢ –°–Ω–∏–∂–µ–Ω–∏–µ –¥–æ—Ö–æ–¥–æ–≤ –∫–∞–∑–Ω—ã",
                "‚Ä¢ –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –ª–∏—á–Ω—ã—Ö –¥–æ—Ö–æ–¥–æ–≤ –∏–≥—Ä–æ–∫–æ–≤",
                "‚Ä¢ –°—Ç–∏–º—É–ª—è—Ü–∏—è —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"
            ]
        else:
            reform_type = "–ù–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è —Ä–µ—Ñ–æ—Ä–º–∞"
            color = 0x3498db
            effects = [
                "‚Ä¢ –ù–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —ç–∫–æ–Ω–æ–º–∏–∫–µ",
                "‚Ä¢ –ë–∞–ª–∞–Ω—Å –º–µ–∂–¥—É –¥–æ—Ö–æ–¥–∞–º–∏ –∏–≥—Ä–æ–∫–æ–≤ –∏ –∫–∞–∑–Ω—ã",
                "‚Ä¢ –°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å —ç–∫–æ–Ω–æ–º–∏–∫–∏"
            ]
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        embed = discord.Embed(
            title=f"üìä {reform_type}",
            description=(
                f"{interaction.user.mention} –ø—Ä–µ–¥–ª–æ–∂–∏–ª(–∞) –Ω–∞–ª–æ–≥–æ–≤—É—é —Ä–µ—Ñ–æ—Ä–º—É!\n"
                f"**–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–ª–æ–≥–æ–≤:** {tax_change:+}%\n"
                f"**–î–µ–π—Å—Ç–≤—É–µ—Ç:** {duration} —á–∞—Å–æ–≤"
            ),
            color=color
        )
        
        embed.add_field(
            name="–≠—Ñ—Ñ–µ–∫—Ç—ã —Ä–µ—Ñ–æ—Ä–º—ã",
            value="\n".join(effects),
            inline=False
        )
        
        embed.set_footer(text="–°–ª–µ–¥—É—é—â–∞—è —Ä–µ—Ñ–æ—Ä–º–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ —á–µ—Ä–µ–∑ 48 —á–∞—Å–æ–≤")
        
        await interaction.response.send_message(embed=embed)
    
    @app_commands.command(name="—Ä–∞–±–æ—á–∞—è_–±—Ä–∏–≥–∞–¥–∞", description="–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —Ä–∞–±–æ—á—É—é –±—Ä–∏–≥–∞–¥—É")
    async def work_brigade(self, interaction: discord.Interaction):
        """–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —Ä–∞–±–æ—á—É—é –±—Ä–∏–≥–∞–¥—É"""
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–¥ (—Ä–∞–∑ –≤ 8 —á–∞—Å–æ–≤)
        can_use, time_left = self.check_cooldown(interaction.user.id, "work_brigade", 8)
        if not can_use:
            hours = time_left.seconds // 3600
            minutes = (time_left.seconds % 3600) // 60
            await interaction.response.send_message(
                f"‚ùå –í—ã —É–∂–µ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤—ã–≤–∞–ª–∏ –±—Ä–∏–≥–∞–¥—É –Ω–µ–¥–∞–≤–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ {hours}—á {minutes}–º.",
                ephemeral=True
            )
            return
        
        # –†–∞—Å—á–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∞ (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ–Ω–ª–∞–π–Ω)
        online_members = sum(1 for m in interaction.guild.members if m.status != discord.Status.offline and not m.bot)
        effect = min(online_members * 2, 100)  # –ú–∞–∫—Å–∏–º—É–º +100% –∫ –¥–æ—Ö–æ–¥–∞–º
        duration = 4  # 4 —á–∞—Å–∞
        
        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞
        await self.add_economic_modifier(
            interaction.guild.id,
            "work_brigade_boost",
            effect,
            f"–†–∞–±–æ—á–∞—è –±—Ä–∏–≥–∞–¥–∞ (–æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä: {interaction.user.display_name}): +{effect}% –∫ –¥–æ—Ö–æ–¥–∞–º",
            duration
        )
        
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
        await self.log_economic_event(
            interaction.guild.id,
            interaction.user.id,
            "work_brigade",
            effect,
            f"–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–∞ —Ä–∞–±–æ—á–∞—è –±—Ä–∏–≥–∞–¥–∞: +{effect}% –∫ –¥–æ—Ö–æ–¥–∞–º –Ω–∞ {duration}—á",
            duration
        )
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        embed = discord.Embed(
            title="üë∑ –†–∞–±–æ—á–∞—è –±—Ä–∏–≥–∞–¥–∞",
            description=f"{interaction.user.mention} –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–ª(–∞) —Ä–∞–±–æ—á—É—é –±—Ä–∏–≥–∞–¥—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!",
            color=0xf39c12
        )
        
        embed.add_field(
            name="–≠—Ñ—Ñ–µ–∫—Ç",
            value=f"+{effect}% –∫ –¥–æ—Ö–æ–¥–∞–º –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ {duration} —á–∞—Å–æ–≤",
            inline=False
        )
        
        embed.add_field(
            name="–î–µ—Ç–∞–ª–∏",
            value=(
                f"‚Ä¢ –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ–Ω–ª–∞–π–Ω: {online_members}\n"
                "‚Ä¢ –ö–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n"
                "‚Ä¢ –ß–µ–º –±–æ–ª—å—à–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, —Ç–µ–º —Å–∏–ª—å–Ω–µ–µ —ç—Ñ—Ñ–µ–∫—Ç"
            ),
            inline=False
        )
        
        embed.set_footer(text="–°–ª–µ–¥—É—é—â–∞—è –±—Ä–∏–≥–∞–¥–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ —á–µ—Ä–µ–∑ 12 —á–∞—Å–æ–≤")
        
        await interaction.response.send_message(embed=embed)
    
    @app_commands.command(name="–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è_–∫–∞–º–ø–∞–Ω–∏—è", description="–ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é –∫–∞–º–ø–∞–Ω–∏—é")
    @app_commands.describe(—Ç–µ–º–∞="–¢–µ–º–∞ –∫–∞–º–ø–∞–Ω–∏–∏")
    async def info_campaign(self, interaction: discord.Interaction, —Ç–µ–º–∞: str):
        """–ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é –∫–∞–º–ø–∞–Ω–∏—é"""
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–¥ (—Ä–∞–∑ –≤ 24 —á–∞—Å–∞)
        can_use, time_left = self.check_cooldown(interaction.user.id, "info_campaign", 24)
        if not can_use:
            hours = time_left.seconds // 3600
            minutes = (time_left.seconds % 3600) // 60
            await interaction.response.send_message(
                f"‚ùå –í—ã —É–∂–µ –∑–∞–ø—É—Å–∫–∞–ª–∏ –∫–∞–º–ø–∞–Ω–∏—é –Ω–µ–¥–∞–≤–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ {hours}—á {minutes}–º.",
                ephemeral=True
            )
            return
        
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–º—ã
        topic_effects = {
            # –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ —Ç–µ–º—ã
            "—Ä–æ—Å—Ç": (15, "–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π —Ä–æ—Å—Ç"),
            "—Ä–∞–∑–≤–∏—Ç–∏–µ": (10, "–†–∞–∑–≤–∏—Ç–∏–µ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã"),
            "–∏–Ω–Ω–æ–≤–∞—Ü–∏–∏": (20, "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏"),
            # –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ —Ç–µ–º—ã
            "–∫—Ä–∏–∑–∏—Å": (-15, "–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –∫—Ä–∏–∑–∏—Å"),
            "–∏–Ω—Ñ–ª—è—Ü–∏—è": (-10, "–í—ã—Å–æ–∫–∞—è –∏–Ω—Ñ–ª—è—Ü–∏—è"),
            "–±–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞": (-20, "–†–æ—Å—Ç –±–µ–∑—Ä–∞–±–æ—Ç–∏—Ü—ã")
        }
        
        # –ü–æ–∏—Å–∫ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –≤ —Ç–µ–º–µ
        effect = 0
        effect_desc = "–ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç"
        
        for keyword, (e, desc) in topic_effects.items():
            if keyword in —Ç–µ–º–∞.lower():
                effect = e
                effect_desc = desc
                break
        
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π - —Å–ª—É—á–∞–π–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç
        if effect == 0:
            effect = random.randint(-10, 10)
            effect_desc = "–°–º–µ—à–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏"
        
        duration = random.randint(6, 12)  # 6-12 —á–∞—Å–æ–≤
        
        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞
        await self.add_economic_modifier(
            interaction.guild.id,
            "info_campaign_effect",
            effect,
            f"–ò–Ω—Ñ–æ-–∫–∞–º–ø–∞–Ω–∏—è: {effect_desc} ({effect:+}%)",
            duration
        )
        
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
        await self.log_economic_event(
            interaction.guild.id,
            interaction.user.id,
            "info_campaign",
            effect,
            f"–ó–∞–ø—É—â–µ–Ω–∞ –∏–Ω—Ñ–æ-–∫–∞–º–ø–∞–Ω–∏—è: {effect_desc} ({effect:+}%) –Ω–∞ {duration}—á",
            duration
        )
        
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –∏ –∏–∫–æ–Ω–∫–∏
        if effect > 0:
            color = 0x2ecc71
            icon = "üìà"
        elif effect < 0:
            color = 0xe74c3c
            icon = "üìâ"
        else:
            color = 0x3498db
            icon = "üìä"
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        embed = discord.Embed(
            title=f"{icon} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–∞–º–ø–∞–Ω–∏—è",
            description=(
                f"{interaction.user.mention} –∑–∞–ø—É—Å—Ç–∏–ª(–∞) –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é –∫–∞–º–ø–∞–Ω–∏—é!\n"
                f"**–¢–µ–º–∞:** {—Ç–µ–º–∞}\n"
                f"**–≠—Ñ—Ñ–µ–∫—Ç:** {effect_desc} ({effect:+}%)\n"
                f"**–î–µ–π—Å—Ç–≤—É–µ—Ç:** {duration} —á–∞—Å–æ–≤"
            ),
            color=color
        )
        
        embed.add_field(
            name="–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç",
            value=(
                "‚Ä¢ –ù–æ–≤–æ—Å—Ç–∏ –≤–ª–∏—è—é—Ç –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –Ω–∞ —Ä—ã–Ω–∫–µ\n"
                "‚Ä¢ –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ —Å—Ç–∏–º—É–ª–∏—Ä—É—é—Ç —ç–∫–æ–Ω–æ–º–∏–∫—É\n"
                "‚Ä¢ –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –º–æ–≥—É—Ç –≤—ã–∑–≤–∞—Ç—å –ø–∞–Ω–∏–∫—É"
            ),
            inline=False
        )
        
        embed.set_footer(text="–°–ª–µ–¥—É—é—â–∞—è –∫–∞–º–ø–∞–Ω–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ —á–µ—Ä–µ–∑ 36 —á–∞—Å–æ–≤")
        
        await interaction.response.send_message(embed=embed)

async def setup(bot):
    await bot.add_cog(EconomicInfluence(bot))
