import discord
from discord.ext import commands
import sqlite3
from datetime import datetime, timedelta
import random
import asyncio

class Personal(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
    
    @commands.slash_command(name="–±–∞–ª–∞–Ω—Å", description="–ü–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –±–∞–ª–∞–Ω—Å –∏–ª–∏ –±–∞–ª–∞–Ω—Å –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    async def balance(self, ctx, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: discord.Member = None):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ –±–∞–ª–∞–Ω—Å–∞"""
        target_user = –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å or ctx.author
        
        balance = await self.bot.get_user_balance(ctx.guild, target_user)
        
        # –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        conn = sqlite3.connect(self.bot.db_path)
        cursor = conn.cursor()
        
        cursor.execute(
            "SELECT total_earned FROM wallets WHERE guild_id = ? AND user_id = ?",
            (ctx.guild.id, target_user.id)
        )
        result = cursor.fetchone()
        total_earned = result[0] if result else 0
        
        # –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        cursor.execute(
            """SELECT amount, transaction_type, description, timestamp 
               FROM transactions 
               WHERE guild_id = ? AND (from_user_id = ? OR to_user_id = ?) 
               ORDER BY timestamp DESC LIMIT 5""",
            (ctx.guild.id, target_user.id, target_user.id)
        )
        recent_transactions = cursor.fetchall()
        conn.close()
        
        embed = discord.Embed(
            title=f"üí∞ –ö–æ—à–µ–ª–µ–∫ {target_user.display_name}",
            color=0x00FF00 if balance > 0 else 0xFF0000
        )
        
        embed.add_field(
            name="–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å",
            value=f"**{balance:,}** –º–æ–Ω–µ—Ç",
            inline=True
        )
        
        embed.add_field(
            name="–í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ",
            value=f"{total_earned:,} –º–æ–Ω–µ—Ç",
            inline=True
        )
        
        if recent_transactions:
            transactions_text = ""
            for amount, trans_type, desc, timestamp in recent_transactions[:3]:
                sign = "+" if trans_type in ["work", "daily", "transfer"] and amount > 0 else "-"
                transactions_text += f"{sign}{amount} - {desc}\n"
            
            embed.add_field(
                name="–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏",
                value=transactions_text or "–ù–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–π",
                inline=False
            )
        
        embed.set_thumbnail(url=target_user.avatar.url if target_user.avatar else target_user.default_avatar.url)
        
        await ctx.respond(embed=embed)
    
    @commands.slash_command(name="—Ä–∞–±–æ—Ç–∞", description="–ü–æ—Ä–∞–±–æ—Ç–∞—Ç—å –∏ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –¥–µ–Ω—å–≥–∏")
    async def work(self, ctx):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã"""
        conn = sqlite3.connect(self.bot.db_path)
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫—É–ª–¥–∞—É–Ω
        cursor.execute(
            "SELECT last_work FROM wallets WHERE guild_id = ? AND user_id = ?",
            (ctx.guild.id, ctx.author.id)
        )
        result = cursor.fetchone()
        
        if result and result[0]:
            last_work = datetime.fromisoformat(result[0])
            cooldown_hours = self.bot.config["personal_economy"]["work_cooldown_hours"]
            next_work = last_work + timedelta(hours=cooldown_hours)
            
            if datetime.now() < next_work:
                remaining = next_work - datetime.now()
                hours, remainder = divmod(remaining.seconds, 3600)
                minutes, _ = divmod(remainder, 60)
                
                embed = discord.Embed(
                    title="‚è∞ –°–ª–∏—à–∫–æ–º —Ä–∞–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã",
                    description=f"–í—ã –º–æ–∂–µ—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ {hours}—á {minutes}–º",
                    color=0xFF6B35
                )
                await ctx.respond(embed=embed)
                return
        
        # –°–ª—É—á–∞–π–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞
        min_reward = self.bot.config["personal_economy"]["work_min_reward"]
        max_reward = self.bot.config["personal_economy"]["work_max_reward"]
        reward = random.randint(min_reward, max_reward)
        
        # –°–ª—É—á–∞–π–Ω–∞—è —Ä–∞–±–æ—Ç–∞
        jobs = [
            "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–ª–∏ Discord –±–æ—Ç–∞", "—Ç–æ—Ä–≥–æ–≤–∞–ª–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π", "–ø–∏—Å–∞–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é",
            "–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–ª–∏ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö", "–ø—Ä–æ–≤–æ–¥–∏–ª–∏ –∫–æ–¥-—Ä–µ–≤—å—é", "–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–ª–∏ —Å–µ—Ä–≤–µ—Ä",
            "—Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–ª–∏ API", "—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", "–∏–∑—É—á–∞–ª–∏ –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
            "—É—á–∞—Å—Ç–≤–æ–≤–∞–ª–∏ –≤ —Ö–∞–∫–∞—Ç–æ–Ω–µ", "–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞–ª–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤", "—Å–æ–∑–¥–∞–≤–∞–ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç"
        ]
        job_description = f"–í—ã {random.choice(jobs)}"
        
        # –î–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω—å–≥–∏
        new_balance, tax = await self.bot.add_user_money(
            ctx.guild, ctx.author, reward, "work", job_description
        )
        
        # –û–±–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ä–∞–±–æ—Ç—ã
        cursor.execute(
            "UPDATE wallets SET last_work = ? WHERE guild_id = ? AND user_id = ?",
            (datetime.now().isoformat(), ctx.guild.id, ctx.author.id)
        )
        conn.commit()
        conn.close()
        
        embed = discord.Embed(
            title="üíº –†–∞–±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!",
            description=job_description,
            color=0x00FF00
        )
        
        embed.add_field(
            name="–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ",
            value=f"+{reward} –º–æ–Ω–µ—Ç",
            inline=True
        )
        
        if tax > 0:
            embed.add_field(
                name="–ù–∞–ª–æ–≥",
                value=f"-{tax} –º–æ–Ω–µ—Ç ({self.bot.config['personal_economy']['tax_rate']*100:.0f}%)",
                inline=True
            )
        
        embed.add_field(
            name="–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å",
            value=f"{new_balance:,} –º–æ–Ω–µ—Ç",
            inline=True
        )
        
        await ctx.respond(embed=embed)
    
    @commands.slash_command(name="–µ–∂–µ–¥–Ω–µ–≤–Ω–æ", description="–ü–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –Ω–∞–≥—Ä–∞–¥—É")
    async def daily(self, ctx):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –Ω–∞–≥—Ä–∞–¥—ã"""
        conn = sqlite3.connect(self.bot.db_path)
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫—É–ª–¥–∞—É–Ω
        cursor.execute(
            "SELECT last_daily FROM wallets WHERE guild_id = ? AND user_id = ?",
            (ctx.guild.id, ctx.author.id)
        )
        result = cursor.fetchone()
        
        if result and result[0]:
            last_daily = datetime.fromisoformat(result[0])
            next_daily = last_daily + timedelta(days=1)
            
            if datetime.now() < next_daily:
                remaining = next_daily - datetime.now()
                hours, remainder = divmod(remaining.seconds, 3600)
                minutes, _ = divmod(remainder, 60)
                
                embed = discord.Embed(
                    title="‚è∞ –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞ —É–∂–µ –ø–æ–ª—É—á–µ–Ω–∞",
                    description=f"–°–ª–µ–¥—É—é—â–∞—è –Ω–∞–≥—Ä–∞–¥–∞ —á–µ—Ä–µ–∑ {remaining.days}–¥ {hours}—á {minutes}–º",
                    color=0xFF6B35
                )
                await ctx.respond(embed=embed)
                return
        
        reward = self.bot.config["personal_economy"]["daily_reward"]
        
        # –î–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω—å–≥–∏
        new_balance, tax = await self.bot.add_user_money(
            ctx.guild, ctx.author, reward, "daily", "–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞"
        )
        
        # –û–±–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –Ω–∞–≥—Ä–∞–¥—ã
        cursor.execute(
            "UPDATE wallets SET last_daily = ? WHERE guild_id = ? AND user_id = ?",
            (datetime.now().isoformat(), ctx.guild.id, ctx.author.id)
        )
        conn.commit()
        conn.close()
        
        embed = discord.Embed(
            title="üéÅ –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞!",
            description="–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∑–∞–≤—Ç—Ä–∞ –∑–∞ –Ω–æ–≤–æ–π –Ω–∞–≥—Ä–∞–¥–æ–π!",
            color=0x00FF00
        )
        
        embed.add_field(
            name="–ü–æ–ª—É—á–µ–Ω–æ",
            value=f"+{reward} –º–æ–Ω–µ—Ç",
            inline=True
        )
        
        if tax > 0:
            embed.add_field(
                name="–ù–∞–ª–æ–≥",
                value=f"-{tax} –º–æ–Ω–µ—Ç ({self.bot.config['personal_economy']['tax_rate']*100:.0f}%)",
                inline=True
            )
        
        embed.add_field(
            name="–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å",
            value=f"{new_balance:,} –º–æ–Ω–µ—Ç",
            inline=True
        )
        
        await ctx.respond(embed=embed)
    
    @commands.slash_command(name="–ø–µ—Ä–µ–≤–µ—Å—Ç–∏", description="–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
    async def transfer(self, ctx, –ø–æ–ª—É—á–∞—Ç–µ–ª—å: discord.Member, —Å—É–º–º–∞: int):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –¥–µ–Ω–µ–≥"""
        if –ø–æ–ª—É—á–∞—Ç–µ–ª—å == ctx.author:
            await ctx.respond("‚ùå –ù–µ–ª—å–∑—è –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –¥–µ–Ω—å–≥–∏ —Å–∞–º–æ–º—É —Å–µ–±–µ!", ephemeral=True)
            return
        
        if –ø–æ–ª—É—á–∞—Ç–µ–ª—å.bot:
            await ctx.respond("‚ùå –ù–µ–ª—å–∑—è –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –¥–µ–Ω—å–≥–∏ –±–æ—Ç–∞–º!", ephemeral=True)
            return
        
        if —Å—É–º–º–∞ <= 0:
            await ctx.respond("‚ùå –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π!", ephemeral=True)
            return
        
        # –í—ã–ø–æ–ª–Ω–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥
        success, new_balance, fee = await self.bot.transfer_money(
            ctx.guild, ctx.author, –ø–æ–ª—É—á–∞—Ç–µ–ª—å, —Å—É–º–º–∞
        )
        
        if not success:
            embed = discord.Embed(
                title="‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤",
                description=f"–£ –≤–∞—Å {new_balance:,} –º–æ–Ω–µ—Ç, –∞ –Ω—É–∂–Ω–æ {—Å—É–º–º–∞ + fee:,} (–≤–∫–ª—é—á–∞—è –∫–æ–º–∏—Å—Å–∏—é {fee} –º–æ–Ω–µ—Ç)",
                color=0xFF0000
            )
            await ctx.respond(embed=embed, ephemeral=True)
            return
        
        embed = discord.Embed(
            title="üí∏ –ü–µ—Ä–µ–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω",
            description=f"–í—ã –ø–µ—Ä–µ–≤–µ–ª–∏ **{—Å—É–º–º–∞:,}** –º–æ–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {–ø–æ–ª—É—á–∞—Ç–µ–ª—å.mention}",
            color=0x00FF00
        )
        
        if fee > 0:
            embed.add_field(
                name="–ö–æ–º–∏—Å—Å–∏—è",
                value=f"{fee} –º–æ–Ω–µ—Ç ({self.bot.config['personal_economy']['transfer_fee']*100:.0f}%)",
                inline=True
            )
        
        embed.add_field(
            name="–í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å",
            value=f"{new_balance:,} –º–æ–Ω–µ—Ç",
            inline=True
        )
        
        await ctx.respond(embed=embed)
        
        # –£–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        try:
            recipient_balance = await self.bot.get_user_balance(ctx.guild, –ø–æ–ª—É—á–∞—Ç–µ–ª—å)
            dm_embed = discord.Embed(
                title="üí∞ –í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø–µ—Ä–µ–≤–æ–¥!",
                description=f"{ctx.author.mention} –ø–µ—Ä–µ–≤–µ–ª –≤–∞–º **{—Å—É–º–º–∞:,}** –º–æ–Ω–µ—Ç",
                color=0x00FF00
            )
            dm_embed.add_field(
                name="–í–∞—à –±–∞–ª–∞–Ω—Å",
                value=f"{recipient_balance:,} –º–æ–Ω–µ—Ç",
                inline=True
            )
            await –ø–æ–ª—É—á–∞—Ç–µ–ª—å.send(embed=dm_embed)
        except:
            pass  # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–°
    
    @commands.slash_command(name="–ª–∏–¥–µ—Ä—ã", description="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ø —Å–∞–º—ã—Ö –±–æ–≥–∞—Ç—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    async def leaderboard(self, ctx):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤"""
        conn = sqlite3.connect(self.bot.db_path)
        cursor = conn.cursor()
        
        cursor.execute(
            """SELECT user_id, balance, total_earned 
               FROM wallets 
               WHERE guild_id = ? 
               ORDER BY balance DESC 
               LIMIT 10""",
            (ctx.guild.id,)
        )
        
        results = cursor.fetchall()
        conn.close()
        
        if not results:
            embed = discord.Embed(
                title="üìä –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤",
                description="–ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º–µ.",
                color=0x2F3136
            )
            await ctx.respond(embed=embed)
            return
        
        embed = discord.Embed(
            title="üìä –¢–æ–ø-10 —Å–∞–º—ã—Ö –±–æ–≥–∞—Ç—ã—Ö",
            color=0xFFD700
        )
        
        leaderboard_text = ""
        for i, (user_id, balance, total_earned) in enumerate(results, 1):
            try:
                user = ctx.guild.get_member(user_id)
                if user:
                    medal = "ü•á" if i == 1 else "ü•à" if i == 2 else "ü•â" if i == 3 else f"{i}."
                    leaderboard_text += f"{medal} **{user.display_name}** ‚Äî {balance:,} –º–æ–Ω–µ—Ç\n"
            except:
                continue
        
        embed.description = leaderboard_text or "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        
        # –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–∑–∏—Ü–∏—é —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor = conn.cursor()
        cursor.execute(
            """SELECT COUNT(*) + 1 as position 
               FROM wallets 
               WHERE guild_id = ? AND balance > (
                   SELECT balance FROM wallets WHERE guild_id = ? AND user_id = ?
               )""",
            (ctx.guild.id, ctx.guild.id, ctx.author.id)
        )
        result = cursor.fetchone()
        user_position = result[0] if result else "N/A"
        
        user_balance = await self.bot.get_user_balance(ctx.guild, ctx.author)
        embed.set_footer(text=f"–í–∞—à–∞ –ø–æ–∑–∏—Ü–∏—è: #{user_position} ({user_balance:,} –º–æ–Ω–µ—Ç)")
        
        await ctx.respond(embed=embed)

def setup(bot):
    bot.add_cog(Personal(bot))
